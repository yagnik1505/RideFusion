@using Microsoft.AspNetCore.Identity
@using RideFusion.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{ var currentController = ViewContext.RouteData.Values["controller"]?.ToString(); var currentAction = ViewContext.RouteData.Values["action"]?.ToString(); }
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var currentUser = await UserManager.GetUserAsync(User);
    var roles = currentUser != null ? await UserManager.GetRolesAsync(currentUser) : new List<string>();
    bool isDriver = roles.Contains("Driver");
    bool incomplete = currentUser != null && (string.IsNullOrWhiteSpace(currentUser.FullName) || (isDriver && string.IsNullOrWhiteSpace(currentUser.UpiId)));

    <li class="nav-item">
        <a class="nav-link text-dark @(currentController=="Profile" ? "active" : "")" asp-area="" asp-controller="Profile" asp-action="Edit">Profile</a>
    </li>
    <li class="nav-item d-flex align-items-center px-2">
        <span class="user-name-badge">@currentUser?.FullName</span>
    </li>
    @if (incomplete)
    {
        <li class="nav-item">
            <a class="nav-link text-warning fw-semibold" asp-area="" asp-controller="Profile" asp-action="Edit">
                <i class="fa fa-exclamation-triangle me-1"></i>Complete Profile
            </a>
        </li>
    }
    <li class="nav-item d-flex align-items-center px-2">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="logout-badge">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
