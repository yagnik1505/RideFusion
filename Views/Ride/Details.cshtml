@model RideFusion.Models.Ride
@{
    ViewData["Title"] = "Ride Details";
}

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fas fa-map-marker-alt text-primary"></i>
                        @Model.StartLocation
                        <i class="fas fa-arrow-right mx-2"></i>
                        <i class="fas fa-map-marker-alt text-success"></i>
                        @Model.EndLocation
                    </h4>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h6><i class="fas fa-calendar text-muted"></i> Date & Time</h6>
                            <p class="mb-1">
                                <strong>Date:</strong> @Model.StartDateTime.ToString("dddd, MMMM dd, yyyy")
                            </p>
                            <p class="mb-1">
                                <strong>Time:</strong> @Model.StartDateTime.ToString("HH:mm")
                            </p>
                        </div>
                        <div class="col-md-6">
                            <h6><i class="fas fa-info-circle text-muted"></i> Ride Information</h6>
                            <p class="mb-1">
                                <strong>Available Seats:</strong> @Model.AvailableSeats
                            </p>
                            @if (Model.DistanceKm.HasValue)
                            {
                                <p class="mb-1">
                                    <strong>Distance:</strong> @Model.DistanceKm.Value.ToString("F1") km
                                </p>
                            }
                            @if (Model.EstimatedMinutes.HasValue)
                            {
                                <p class="mb-1">
                                    <strong>Duration:</strong> @Model.EstimatedMinutes minutes
                                </p>
                            }
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h6><i class="fas fa-user text-muted"></i> Driver Information</h6>
                            <p class="mb-1">
                                <strong>Name:</strong> @Model.Driver.FullName
                            </p>
                            <p class="mb-1">
                                <strong>Email:</strong> @Model.Driver.Email
                            </p>
                            @if (!string.IsNullOrEmpty(Model.Driver.PhoneNumber))
                            {
                                <p class="mb-1">
                                    <strong>Phone:</strong> @Model.Driver.PhoneNumber
                                </p>
                            }
                            @if (!string.IsNullOrEmpty(Model.Driver.VehicleDetails))
                            {
                                <p class="mb-1">
                                    <strong>Vehicle:</strong> @Model.Driver.VehicleDetails
                                </p>
                            }
                            @if (!string.IsNullOrWhiteSpace(Model.Driver.VehicleMake) || !string.IsNullOrWhiteSpace(Model.Driver.VehicleModel))
                            {
                                <p class="mb-1">
                                    <strong>Vehicle (detailed):</strong> @Model.Driver.VehicleMake @Model.Driver.VehicleModel @Model.Driver.VehicleYear (@Model.Driver.VehicleColor) â€¢ @Model.Driver.LicensePlate
                                </p>
                            }
                        </div>
                        <div class="col-md-6">
                            <h6><i class="fas fa-users text-muted"></i> Passengers</h6>
                            @if (Model.Bookings != null && Model.Bookings.Any())
                            {
                                <ul class="list-unstyled">
                                    @foreach (var booking in Model.Bookings.Where(b => b.Status == "Confirmed"))
                                    {
                                        <li class="mb-1">
                                            <i class="fas fa-user-check text-success"></i>
                                            @booking.Passenger.FullName (@booking.SeatsBooked seat@(booking.SeatsBooked > 1 ? "s" : ""))
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted">No passengers yet</p>
                            }
                        </div>
                    </div>

                    @if (Model.Bookings != null && Model.Bookings.Any(b => b.Status == "Pending"))
                    {
                        <div class="alert alert-warning">
                            <h6><i class="fas fa-clock"></i> Pending Bookings</h6>
                            <ul class="mb-0">
                                @foreach (var booking in Model.Bookings.Where(b => b.Status == "Pending"))
                                {
                                    <li>@booking.Passenger.FullName (@booking.SeatsBooked seat@(booking.SeatsBooked > 1 ? "s" : ""))</li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-body text-center">
                    <h3 class="text-success mb-3">$@Model.PricePerSeat</h3>
                    <p class="text-muted mb-4">per seat</p>
                    
                    @if (Model.AvailableSeats > 0)
                    {
                        <a asp-controller="Booking" asp-action="Create" asp-route-rideId="@Model.RideId" 
                           class="btn btn-success btn-lg w-100 mb-3">
                            <i class="fas fa-bookmark"></i> Book This Ride
                        </a>
                    }
                    else
                    {
                        <button class="btn btn-secondary btn-lg w-100 mb-3" disabled>
                            <i class="fas fa-times"></i> Fully Booked
                        </button>
                    }

                    <a asp-controller="Chat" asp-action="Index" asp-route-rideId="@Model.RideId" 
                       class="btn btn-outline-primary w-100 mb-3">
                        <i class="fas fa-comments"></i> Chat with Driver
                    </a>

                    <a asp-action="Search" class="btn btn-outline-secondary w-100">
                        <i class="fas fa-arrow-left"></i> Back to Search
                    </a>
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-body">
                    <h6 class="card-title"><i class="fas fa-money-bill-wave me-1"></i> Online Payment</h6>
                    @if (!string.IsNullOrWhiteSpace(Model.Driver.UpiId))
                    {
                        <div class="alert alert-success mb-2">
                            <strong>Driver UPI ID:</strong> <span class="fw-semibold">@Model.Driver.UpiId</span>
                        </div>
                        <small class="text-muted">Use this UPI ID to pay the driver directly after booking/ride completion as agreed.</small>
                    }
                    else
                    {
                        <small class="text-muted">UPI ID not provided.</small>
                    }
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-body">
                    <h6 class="card-title"><i class="fas fa-user-check me-1"></i> Driver Availability</h6>
                    @if (Model.Driver.IsAvailable.HasValue)
                    {
                        <span class="badge @(Model.Driver.IsAvailable.Value ? "bg-success" : "bg-secondary")">
                            @(Model.Driver.IsAvailable.Value ? "Available" : "Unavailable")
                        </span>
                    }
                    else
                    {
                        <span class="badge bg-light text-dark">Not specified</span>
                    }
                </div>
            </div>

            @if (User.Identity.Name == Model.DriverId)
            {
                <div class="card mt-3">
                    <div class="card-body">
                        <h6 class="card-title">Driver Actions</h6>
                        <div class="d-grid gap-2">
                            <a asp-action="Edit" asp-route-id="@Model.RideId" class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-edit"></i> Edit Ride
                            </a>
                            <a asp-controller="Booking" asp-action="DriverBookings" asp-route-rideId="@Model.RideId" 
                               class="btn btn-outline-info btn-sm">
                                <i class="fas fa-users"></i> Manage Bookings
                            </a>
                            <a asp-action="Delete" asp-route-id="@Model.RideId" class="btn btn-outline-danger btn-sm">
                                <i class="fas fa-trash"></i> Delete Ride
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/your-fontawesome-kit.js" crossorigin="anonymous"></script>
}
