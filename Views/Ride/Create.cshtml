@model RideFusion.Models.Ride
@{
    ViewData["Title"] = "Offer Ride";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-12">
            <h2><i class="fas fa-plus"></i> Offer Ride</h2>
            <p class="text-muted mb-0">Provide ride details below. Your driver profile remains unchanged.</p>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <div class="card">
        <div class="card-body">
            <form asp-action="Create" method="post" class="row g-3" id="rideForm">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="All" class="text-danger"></div>

                <div class="col-md-6">
                    <label asp-for="StartLocation" class="form-label"></label>
                    <input asp-for="StartLocation" class="form-control" maxlength="200" placeholder="Enter pickup location" />
                    <span asp-validation-for="StartLocation" class="text-danger"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="EndLocation" class="form-label"></label>
                    <input asp-for="EndLocation" class="form-control" maxlength="200" placeholder="Enter destination" />
                    <span asp-validation-for="EndLocation" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <label asp-for="StartDateTime" class="form-label">Date & Time</label>
                    <input asp-for="StartDateTime" type="datetime-local" class="form-control" id="startDateTime"
                           value="@(Model.StartDateTime == default ? DateTime.Now.AddHours(1).ToString("yyyy-MM-ddTHH:mm") : Model.StartDateTime.ToString("yyyy-MM-ddTHH:mm"))" />
                    <span asp-validation-for="StartDateTime" class="text-danger" id="dateTimeError"></span>
                </div>

                <div class="col-md-4">
                    <label asp-for="AvailableSeats" class="form-label"></label>
                    <input asp-for="AvailableSeats" type="number" class="form-control" min="1" max="50" />
                    <span asp-validation-for="AvailableSeats" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <label asp-for="PricePerSeat" class="form-label"></label>
                    <div class="input-group">
                        <span class="input-group-text">&#8377;</span>
                        <input asp-for="PricePerSeat" type="number" step="0.01" min="0" class="form-control" />
                    </div>
                    <span asp-validation-for="PricePerSeat" class="text-danger"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="DistanceKm" class="form-label">Distance (km) (optional)</label>
                    <input asp-for="DistanceKm" type="number" step="0.1" min="0" class="form-control" />
                    <span asp-validation-for="DistanceKm" class="text-danger"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="EstimatedMinutes" class="form-label">Estimated Duration (minutes) (optional)</label>
                    <input asp-for="EstimatedMinutes" type="number" min="1" class="form-control" />
                    <span asp-validation-for="EstimatedMinutes" class="text-danger"></span>
                </div>

                <div class="col-12 d-flex justify-content-between">
                    <a asp-action="MyRides" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> My Rides
                    </a>
                    <button type="submit" class="btn btn-primary" id="submitBtn">
                        <i class="fas fa-save"></i> Publish Ride
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const startDateTimeInput = document.getElementById('startDateTime');
            const dateTimeError = document.getElementById('dateTimeError');
            const form = document.getElementById('rideForm');

            // Set minimum datetime to current time
            function setMinDateTime() {
                const now = new Date();
                const year = now.getFullYear();
                const month = String(now.getMonth() + 1).padStart(2, '0');
                const day = String(now.getDate()).padStart(2, '0');
                const hours = String(now.getHours()).padStart(2, '0');
                const minutes = String(now.getMinutes()).padStart(2, '0');
                const minDateTime = `${year}-${month}-${day}T${hours}:${minutes}`;
                startDateTimeInput.setAttribute('min', minDateTime);
            }

            // Validate datetime
            function validateDateTime() {
                const selectedDate = new Date(startDateTimeInput.value);
                const now = new Date();
                
                if (selectedDate <= now) {
                    dateTimeError.textContent = 'Please enter a future date and time. Past dates are not allowed.';
                    dateTimeError.style.display = 'block';
                    startDateTimeInput.classList.add('is-invalid');
                    return false;
                } else {
                    dateTimeError.textContent = '';
                    dateTimeError.style.display = 'none';
                    startDateTimeInput.classList.remove('is-invalid');
                    return true;
                }
            }

            // Set initial minimum datetime
            setMinDateTime();

            // Update minimum datetime every minute
            setInterval(setMinDateTime, 60000);

            // Validate on input change
            startDateTimeInput.addEventListener('change', validateDateTime);
            startDateTimeInput.addEventListener('input', validateDateTime);

            // Validate on form submission
            form.addEventListener('submit', function(e) {
                if (!validateDateTime()) {
                    e.preventDefault();
                    alert('Please select a future date and time for your ride.');
                    startDateTimeInput.focus();
                    return false;
                }
            });
        });
    </script>
}
